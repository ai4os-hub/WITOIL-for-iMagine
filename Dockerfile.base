# THIS FILE CONTAINS THE NECESSARY ELEMENTS TO RUN MEDSLIK-II in a container
ARG tag=3.11

# Base image, e.g. tensorflow/tensorflow:2.x.x-gpu
FROM python:${tag}

LABEL maintainer='Elnaz Azmi, Fahimeh Alibabaei, Igor Atake, Gabriele Accarino, Marco Decarlo, Giovanni Coppini'
LABEL version='0.0.1'
# This is Base image for Medslik-II Oil fate lagrangian model
# It includes the necessary libraries but not the WITOIL code

RUN apt-get update \
  && apt-get install -yq --no-install-recommends \
  build-essential \
  curl \
  fuse \
  gfortran \
  g++ \
  git \
  gnupg \
  gnupg2 \
  keychain \
  libcurl4-openssl-dev \
  libfuse-dev \
  libgl1 \
  liblapack-dev \
  libssl-dev \
  locate \
  lsb-release \
  make \
  m4 \
  nano \
  rsync \
  tzdata \
  tini \
  unzip \
  vim \
  wget \
  zip \
  && rm -rf /var/lib/apt/lists/*


# build netcdf with gcc and g-fortran
ENV CC=gcc
ENV FC=gfortran

# set library location
ENV PREFIXDIR=/usr/local

WORKDIR /

## get zlib
ENV ZLIB_VERSION=zlib-1.3.1
RUN wget https://zlib.net/${ZLIB_VERSION}.tar.gz && tar -xvzf ${ZLIB_VERSION}.tar.gz \
    && cd ${ZLIB_VERSION} \
    && ./configure --prefix=${PREFIXDIR} \
    && make install \
    && rm -rf /${ZLIB_VERSION}.tar.gz /${ZLIB_VERSION}

## get hdf5-1.8
ENV HDF518_VERSION=hdf5-1.8.21
RUN wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/${HDF518_VERSION}/src/${HDF518_VERSION}.tar.gz \
    && tar -xvzf ${HDF518_VERSION}.tar.gz \
    && cd ${HDF518_VERSION} \
    && ./configure --with-zlib=${PREFIXDIR} --prefix=${PREFIXDIR} --enable-hl --enable-shared\
    && make \
    && make install \
    && rm -rf /${HDF518_VERSION}.tar.gz /${HDF518_VERSION}

## get netcdf-c
ENV NETCDFC_VERSION=4.8.0
RUN wget https://github.com/Unidata/netcdf-c/archive/v${NETCDFC_VERSION}.tar.gz \
    && tar -xvzf v${NETCDFC_VERSION}.tar.gz \
    && cd netcdf-c-${NETCDFC_VERSION} \
    && CPPFLAGS=-I${PREFIXDIR}/include LDFLAGS=-L${PREFIXDIR}/lib ./configure --prefix=${PREFIXDIR} --enable-netcdf-4 --enable-shared --enable-dap \
    && make install \
    && rm -rf /v${NETCDFC_VERSION}.tar.gz /netcdf-fortran-${NETCDFC_VERSION}

# Set these flags because some NETCDF libraries do not allow some numerical warnings. As they are not error, these f;ags do not interfer with the results
ENV FCFLAGS="-w -fallow-argument-mismatch -O2"
ENV FFLAGS="-w -fallow-argument-mismatch -O2"

## get netcdf-fortran
ENV NETCDFFORTRAN_VERSION=4.6.0
RUN wget https://github.com/Unidata/netcdf-fortran/archive/v${NETCDFFORTRAN_VERSION}.tar.gz \
    && tar -xvzf v${NETCDFFORTRAN_VERSION}.tar.gz \
    && cd netcdf-fortran-${NETCDFFORTRAN_VERSION} \
    && CPPFLAGS=-I${PREFIXDIR}/include LDFLAGS=-L${PREFIXDIR}/lib ./configure --prefix=${PREFIXDIR} \
    # && make check \
    && make install \
    && rm -rf /v${NETCDFFORTRAN_VERSION}.tar.gz /netcdf-fortran-${NETCDFFORTRAN_VERSION}

# Create a env variable to indicate where the netcdf libaries are saved. Otherwise, executables are not able to run
ENV LD_LIBRARY_PATH=/usr/local/lib

# Downloading Gebco Bathymetry data.
ENV GEBCO=gebco_2024_sub_ice_topo
RUN mkdir -p /data/gebco \
    && cd /data/gebco \
    && wget -O ${GEBCO}.zip https://www.bodc.ac.uk/data/open_download/gebco/${GEBCO}/zip/ \
    && unzip -o ${GEBCO}.zip \
    && rm -f ${GEBCO}.zip

# Downloading GSHHS Coastline data.
ENV GSHHG_SHP=gshhg-shp-2.3.7.zip
RUN mkdir -p /data/gshhs \
    && cd /data/gshhs/ \
    && wget -O ${GSHHG_SHP} https://www.ngdc.noaa.gov/mgg/shorelines/data/gshhg/latest/${GSHHG_SHP} \
    && unzip -o ${GSHHG_SHP} \
    && rm -f ${GSHHG_SHP}

# Run the container forever
CMD ["sleep", "infinity"] 
